{"ast":null,"code":"import _classCallCheck from\"D:/data1/Reactjs/covidtracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"D:/data1/Reactjs/covidtracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"D:/data1/Reactjs/covidtracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"D:/data1/Reactjs/covidtracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{Form,Table}from'react-bootstrap';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Countries=/*#__PURE__*/function(_Component){_inherits(Countries,_Component);var _super=_createSuper(Countries);function Countries(){var _this;_classCallCheck(this,Countries);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={inp:''};_this.onchange=function(e){_this.setState({inp:e.target.value});};return _this;}_createClass(Countries,[{key:\"render\",value:function render(){var _this2=this;var countries=this.props.countries;console.log(countries);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Form.Control,{type:\"text\",style:{background:'#D5D5D2'},placeholder:\"Search By Country Name........\",onChange:this.onchange}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(Table,{striped:true,bordered:true,hover:true,variant:\"dark\",responsive:true,children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Country\"}),/*#__PURE__*/_jsx(\"th\",{children:\"New Confirmed\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Total Confirmed\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Total Recovered\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Total Deaths\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:countries.filter(function(country){if(_this2.state.inp===''){return country;}else if(country.Country.toLowerCase().includes(_this2.state.inp.toLowerCase())){return country;}return null;}).map(function(country){return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:country.Country}),/*#__PURE__*/_jsx(\"td\",{children:country.NewConfirmed}),/*#__PURE__*/_jsx(\"td\",{children:country.TotalConfirmed}),/*#__PURE__*/_jsx(\"td\",{children:country.TotalRecovered}),/*#__PURE__*/_jsx(\"td\",{children:country.TotalDeaths})]});})})]})]});}}]);return Countries;}(Component);export{Countries as default};","map":{"version":3,"sources":["D:/data1/Reactjs/covidtracker/src/Countries.js"],"names":["React","Component","Form","Table","Countries","state","inp","onchange","e","setState","target","value","countries","props","console","log","background","filter","country","Country","toLowerCase","includes","map","NewConfirmed","TotalConfirmed","TotalRecovered","TotalDeaths"],"mappings":"gkBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAAQC,IAAR,CAAaC,KAAb,KAAyB,iBAAzB,C,gJAEqBC,CAAAA,S,uUACjBC,K,CAAM,CACFC,GAAG,CAAC,EADF,C,OAGNC,Q,CAAS,SAACC,CAAD,CAAK,CAAC,MAAKC,QAAL,CAAc,CAACH,GAAG,CAACE,CAAC,CAACE,MAAF,CAASC,KAAd,CAAd,EAAoC,C,2DAGnD,iBAAS,oBACEC,CAAAA,SADF,CACa,KAAKC,KADlB,CACED,SADF,CAILE,OAAO,CAACC,GAAR,CAAYH,SAAZ,EACA,mBACI,wCACA,KAAC,IAAD,CAAM,OAAN,EAAc,IAAI,CAAC,MAAnB,CAA0B,KAAK,CAAE,CAACI,UAAU,CAAC,SAAZ,CAAjC,CAAyD,WAAW,CAAC,gCAArE,CAAsG,QAAQ,CAAE,KAAKT,QAArH,EADA,cAEA,aAFA,cAEK,aAFL,cAGA,MAAC,KAAD,EAAO,OAAO,KAAd,CAAe,QAAQ,KAAvB,CAAwB,KAAK,KAA7B,CAA8B,OAAO,CAAC,MAAtC,CAA8C,UAAU,KAAxD,wBAEZ,oCACI,mCACI,+BADJ,cAEI,qCAFJ,cAGI,uCAHJ,cAII,uCAJJ,cAKI,oCALJ,GADJ,EAFY,cAWZ,uBACCK,SAAS,CAACK,MAAV,CAAiB,SAACC,OAAD,CAAW,CACzB,GAAG,MAAI,CAACb,KAAL,CAAWC,GAAX,GAAiB,EAApB,CACA,CACI,MAAOY,CAAAA,OAAP,CACH,CAHD,IAIK,IAAGA,OAAO,CAACC,OAAR,CAAgBC,WAAhB,GAA8BC,QAA9B,CAAuC,MAAI,CAAChB,KAAL,CAAWC,GAAX,CAAec,WAAf,EAAvC,CAAH,CACL,CACI,MAAOF,CAAAA,OAAP,CACH,CACD,MAAO,KAAP,CACH,CAVA,EAUEI,GAVF,CAUM,SAACJ,OAAD,CAAW,CAChB,mBAAO,mCACO,oBAAKA,OAAO,CAACC,OAAb,EADP,cAEO,oBAAKD,OAAO,CAACK,YAAb,EAFP,cAGO,oBAAKL,OAAO,CAACM,cAAb,EAHP,cAIO,oBAAKN,OAAO,CAACO,cAAb,EAJP,cAKO,oBAAKP,OAAO,CAACQ,WAAb,EALP,GAAP,CAQD,CAnBA,CADD,EAXY,GAHA,GADJ,CA4CH,C,uBAxDkCzB,S,SAAlBG,S","sourcesContent":["import React, { Component } from 'react'\r\nimport {Form,Table} from 'react-bootstrap';\r\n\r\nexport default class Countries extends Component {\r\n    state={\r\n        inp:''\r\n    }\r\n    onchange=(e)=>{this.setState({inp:e.target.value})}\r\n    \r\n\r\n    render() {\r\n        const {countries}=this.props;\r\n\r\n       \r\n        console.log(countries);\r\n        return (\r\n            <>\r\n            <Form.Control type=\"text\" style={{background:'#D5D5D2'}} placeholder=\"Search By Country Name........\" onChange={this.onchange} />\r\n            <br/><br/>\r\n            <Table striped bordered hover variant=\"dark\"  responsive >\r\n\r\n<thead>\r\n    <tr>\r\n        <th>Country</th>\r\n        <th>New Confirmed</th>\r\n        <th>Total Confirmed</th>\r\n        <th>Total Recovered</th>\r\n        <th>Total Deaths</th>\r\n    </tr>\r\n</thead>\r\n<tbody>\r\n{countries.filter((country)=>{\r\n    if(this.state.inp==='')\r\n    {\r\n        return country\r\n    }\r\n    else if(country.Country.toLowerCase().includes(this.state.inp.toLowerCase()))\r\n    {\r\n        return country\r\n    }\r\n    return null;\r\n}).map((country)=>{\r\n  return <tr>\r\n                <td>{country.Country}</td>\r\n                <td>{country.NewConfirmed}</td>\r\n                <td>{country.TotalConfirmed}</td>\r\n                <td>{country.TotalRecovered}</td>\r\n                <td>{country.TotalDeaths}</td>\r\n            </tr>\r\n\r\n})}\r\n            \r\n            </tbody>\r\n            </Table>\r\n\r\n            </>\r\n                \r\n          \r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}